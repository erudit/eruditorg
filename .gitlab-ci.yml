stages:
  - test
  - docker
  - deploy-staging
  - switch-staging
  - deploy-production

variables:
  GIT_SUBMODULE_STRATEGY: normal
  NPM_AUDIT_IGNORE: ""


###############################################################################

python-unittest:
  stage: test
  image: python:3.6
  before_script:
   # https://gitlab.com/gitlab-org/gitlab-ce/issues/14983#note_4637913
   - apt-get update >/dev/null
   - apt-get install -y locales >/dev/null
   - echo "fr_CA.UTF-8 UTF-8" >> /etc/locale.gen
   - locale-gen
   - pip install tox
  script:
    - tox -e py36

python-flake8:
  stage: test
  image: python:3.6
  before_script:
   - pip install tox
  script:
   - tox -e flake8

python-safety:
  stage: test
  image: python:3.6
  before_script:
   - pip install tox
  script:
   - tox -e safety

npm-audit:
  stage: test
  image: node:latest
  script:
    - npm audit
    #- "! npm audit --parseable | grep -v -E $NPM_AUDIT_IGNORE"

npm-build:
  stage: test
  image: node:latest
  before_script:
    - npm install
  script:
    - npm run gulp -- build --production

################################################################################

build-docker-image:
  stage: docker
  image:
    name: gcr.io/kaniko-project/executor:debug-v0.17.1
    entrypoint: ["/busybox/sh", "-c"]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - VERSION=${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/compose/production/django/Dockerfile --destination $CI_REGISTRY_IMAGE:$VERSION


###############################################################################

.start_ssh_agent:
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

deploy-staging:
  extends: .start_ssh_agent
  stage: deploy-staging
  image: debian:buster-slim
  when: manual
  script:
    - VERSION=${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}
    - ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -t $TEST_SERVER "$DEPLOY_COMMAND $VERSION"

switch-staging:
  extends: .start_ssh_agent
  stage: switch-staging
  image: debian:buster-slim
  when: manual
  script:
    - ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -t $TEST_SERVER "$SWITCH_COMMAND"

#########################################################################

deploy-production:
  stage: deploy-production
  when: manual
  script:
    - echo test
